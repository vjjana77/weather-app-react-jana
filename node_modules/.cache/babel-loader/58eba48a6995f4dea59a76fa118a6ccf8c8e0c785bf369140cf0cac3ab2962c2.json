{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\ss-solution-jana-task\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Select from 'react-select';\n//import Weather from './Components/Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'India',\n  label: 'India'\n}, {\n  value: 'UK',\n  label: 'UK'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nconst options2 = [{\n  country: 'India',\n  value: 'Chennai',\n  label: 'Chennai'\n}, {\n  country: 'India',\n  value: 'Bangalore',\n  label: 'Bangalore'\n}, {\n  country: 'UK',\n  value: 'London',\n  label: 'London'\n}];\nexport default function App() {\n  _s();\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n    await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=dfbbc9612ad3e9bbc36199bcfacbefe4`).then(res => res.json()).then(result => {\n      setData(result);\n      console.log(result);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, [lat, long]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: typeof data.main != 'undefined' ? /*#__PURE__*/_jsxDEV(Weather, {\n      weatherData: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gE/fZZ7pzRi/f0KiE3Gj1Ld/pxs=\");\n_c = App;\nfunction OnSelectionChange(selectedOption) {\n  console.log(selectedOption);\n}\n_c2 = OnSelectionChange;\nconst WeatherDetails = props => {\n  const {\n    weatherData,\n    stateOption\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SS Solutions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: OnSelectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: stateOption,\n      onChange: OnSelectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n_c3 = WeatherDetails;\nfunction Weather(weatherData) {\n  _s2();\n  const [stateOption, setStateOption] = useState([{\n    value: \"Jana\",\n    label: \"Vj Jana\"\n  }]);\n  if (weatherData.weatherData.cod === 200) {\n    return /*#__PURE__*/_jsxDEV(WeatherDetails, {\n      weatherData: weatherData,\n      stateOption: stateOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Error 404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this);\n  }\n}\n_s2(Weather, \"s2wQMy3PiEylyv3bRHq+lSBtaZU=\");\n_c4 = Weather;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"OnSelectionChange\");\n$RefreshReg$(_c3, \"WeatherDetails\");\n$RefreshReg$(_c4, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","Select","jsxDEV","_jsxDEV","options","value","label","options2","country","App","_s","lat","setLat","long","setLong","data","setData","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","env","REACT_APP_API_URL","then","res","json","result","console","log","className","children","main","Weather","weatherData","fileName","_jsxFileName","lineNumber","columnNumber","_c","OnSelectionChange","selectedOption","_c2","WeatherDetails","props","stateOption","onChange","_c3","_s2","setStateOption","cod","_c4","$RefreshReg$"],"sources":["D:/REACT/ss-solution-jana-task/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Select from 'react-select'\n//import Weather from './Components/Weather';\n\n\n\nconst options = [\n  { value: 'India', label: 'India' },\n  { value: 'UK', label: 'UK' },\n  { value: 'vanilla', label: 'Vanilla' }\n]\n\nconst options2 = [\n  { country:'India', value: 'Chennai', label: 'Chennai' },\n  { country:'India', value: 'Bangalore', label: 'Bangalore' },\n  { country:'UK', value: 'London', label: 'London' }\n]\n\n\nexport default function App() {\n  \n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n\n  const fetchData = async () => {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n\n    await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=dfbbc9612ad3e9bbc36199bcfacbefe4`)\n    .then(res => res.json())\n    .then(result => {\n      setData(result)\n      console.log(result);\n    });\n  }\n  \n  useEffect(() => {\n    fetchData();\n  }, [lat,long])\n  \n  return (\n    <div className=\"App\">\n      \n      {(typeof data.main != 'undefined') ? (\n        <Weather weatherData={data}/>\n      ): (\n        <div></div>\n      )}\n      \n    </div>\n  );\n}\n\nfunction OnSelectionChange (selectedOption) {\n  \n  console.log(selectedOption)\n}\n\n\n\n\nconst WeatherDetails = (props)=>{\n  const {weatherData,stateOption} = props\n  return(<div>\n  <h1>SS Solutions</h1>\n  <Select options={options} onChange={OnSelectionChange} />\n  <Select options={stateOption} onChange={OnSelectionChange} />\n</div>)\n}\n\nfunction Weather(weatherData) {\n  \n  const [stateOption, setStateOption] = useState([{value:\"Jana\",label:\"Vj Jana\"}]);\n  if(weatherData.weatherData.cod===200) { \n    \n    return(\n      <WeatherDetails weatherData={weatherData} stateOption={stateOption}  />\n    )\n  }\n  else{\n  return (<h1>Error 404</h1>)\n  }\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}